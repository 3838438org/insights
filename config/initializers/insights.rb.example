# the location of your insights.yml file
INSIGHTS_EXPORT_PATH = '../insights_demo/config/insights.yml'

# timezone used for time fields
INSIGHTS_TIMEZONE = 'Europe/Brussels'

# TODO: uncomment any of the following and point it to your database

# # postgresql adapter
# INSIGHTS_DATABASE = {
#   adapter: 'postgresql',
#   encoding: 'unicode',
#   host: 'localhost',
#   database: 'insights_demo',
#   pool: 5,
#   variables: {
#     statement_timeout: 5000
#   }
# }

# # sqlite adapter
# INSIGHTS_DATABASE = {
#   adapter: 'sqlite3',
#   pool: 5,
#   timeout: 5000,
#   database: '../insights_demo/db/development.sqlite3'
# }

# # take the database from rails's database.yml
# INSIGHTS_DATABASE = Rails.configuration.database_configuration['target_database']


# TODO: uncomment any of the following to enable/disable authentication

# # no authentication
# INSIGHTS_LOGIN = false

# # simple user/pass
# INSIGHTS_LOGIN = ['demo', 'demo']

# # multiple user/pass combinations
# INSIGHTS_LOGIN = [
#   ['demo', 'demo'],
#   ['admin', 'pass']
# ]

# # simple lambda
# INSIGHTS_LOGIN = -> (user, password) { user == 'demo' && password == 'password' }

# # lamba using devise's authentication from your target database
# INSIGHTS_LOGIN = -> (user, password) do
#   conn = TargetDatabase.connection
#   results = conn.execute("select encrypted_password from users where email=#{conn.quote(user)} and is_admin = 't'")
#   return false if results.count == 0
#
#   encrypted_password_from_sql = results.first['encrypted_password']
#   return false if encrypted_password_from_sql.blank?
#
#   bcrypt = ::BCrypt::Password.new(encrypted_password_from_sql)
#   encrypted_password_from_form = ::BCrypt::Engine.hash_secret(password, bcrypt.salt)
#
#   encrypted_password_from_sql == encrypted_password_from_form
# end
